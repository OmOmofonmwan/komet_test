name: Komet Release Workflow

run-name: "Releasing ${{ github.event.repository.name }} #${{github.run_number}}"

# Trigger workflow manually
on:
  workflow_dispatch:

env:
  BRANCH_NAME: ${{github.ref_name}}
  TRUNK_BRANCH_NAME: 'main'

jobs:
  release:
    name: Release
    runs-on: ubuntu-24.04
    if: github.repository_owner == 'ikmdev'
    outputs:
        RELEASE_UPLOAD_URL: ${{ steps.release_ikmdev_codes.outputs.release_upload_url}}
        RELEASE_VERSION: ${{steps.release_ikmdev_codes.outputs.release_version}}
    steps:
      - name: Verify Branch
        if: env.BRANCH_NAME != env.TRUNK_BRANCH_NAME
        run: |
          echo "ERROR: Attempting to release from branch ${{env.BRANCH_NAME}}. Release from ${{env.TRUNK_BRANCH_NAME}} branch only"
          exit 1

      - name: Release IKMDEV Code
        id: release_ikmdev_codes
        uses: ikmdev/maven-release-action@komet
        with:
          ikmdevops_pat: ${{secrets.IKMDEVOPS_PAT_TOKEN}}
          github_token: ${{secrets.GITHUB_TOKEN}}
          ossrh_username: ${{secrets.OSSRH_TOKEN_USER}}
          ossrh_token: ${{secrets.OSSRH_TOKEN_PASS}}
          gpg_key: ${{secrets.GPG_KEY}}
          gpg_passphrase: ${{secrets.GPG_PASSPHRASE}}
            
#   generate_release_installers:
#     name: Generate Release Installers
#     needs: release
#     strategy:
#       matrix:
#         os: [macos-13, macos-14, ubuntu-20.04, windows-2022]
#     runs-on: ${{matrix.os}}
#     steps:
#        - name: Checkout Code Repository
#          uses: actions/checkout@v4
#          with:
#             token: ${{secrets.IKMDEVOPS_PAT_TOKEN}}
#             ref: ${{ needs.release.outputs.RELEASE_VERSION }}
    
#        - name: Setup Java
#          uses: actions/setup-java@v4
#          with:
#             distribution: 'adopt'
#             java-version: '21'

#        - name: Composite Action
#          uses: ./.github/composite
#          with:
#             branch_name: ${{ needs.release.outputs.RELEASE_VERSION }}
#             isSnapshot: "false"
#             release_upload_url: ${{ needs.release.outputs.RELEASE_UPLOAD_URL }}
#             pom_version: ${{ needs.release.outputs.RELEASE_VERSION }}
#             github_token: ${{secrets.GITHUB_TOKEN}}
#             operating_system: ${{matrix.os}}