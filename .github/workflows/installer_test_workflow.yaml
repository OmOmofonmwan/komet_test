name: Installer Workflow

run-name: Installer Workflow Test


on:
  workflow_dispatch:
  push:

env:
    MAVEN_INSTALLER_ARGS: '-P create-installer'
    MAVEN_SETTINGS: '/home/ec2-user/maven/.m2/settings.xml'
    IS_SNAPSHOT: 'false'
    BRANCH_NAME: ${{github.ref_name}}


jobs:
   initialize:
      name: Initialize
      runs-on: ubuntu-20.04
      outputs:
        POM_VERSION: ${{steps.get_current_version.outputs.POM_VERSION}}
        JPACKAGEAPPNAME: ${{steps.snapshot_vars.outputs.jpackageAppName}}
        JPACKAGEAPPVERSION: ${{steps.snapshot_vars.outputs.jpackageAppVersion}}
      steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
  
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '21'
        
      - name: Extract Version
        id: get_current_version
        run: |
            echo "POM_VERSION=$(./mvnw help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_OUTPUT
  
      - name: Print Maven POM project version
        run: |
          echo "version = ${{ steps.get_current_version.outputs.POM_VERSION }}"

      - name: Verify Is SNAPSHOT Version
        if: ${{ contains(steps.get_current_version.outputs.POM_VERSION, '-SNAPSHOT')}}
        run: echo "IS_SNAPSHOT=true" >> $GITHUB_ENV

      - name: Print Status
        run: |
          echo "IS_SNAPSHOT --  ${{env.IS_SNAPSHOT}}"
          echo "BRANCH_NAME -- ${{env.BRANCH_NAME}}"

      - name: IS_SNAPSHOT & BRANCH IS NOT MAIN
        if: env.IS_SNAPSHOT == 'true' && env.BRANCH_NAME != 'main'
        id: snapshot_installers_vars
        env:
          POM: ${{steps.get_current_version.outputs.POM_VERSION}}
        run: |
          split=(${POM//.//})
          echo $split
      - name: Fail this step
        run: |
          echo "${{steps.snapshot_installers_vars.outputs.result}}"
          exit 1
          


      
        
  
      - name: Verify Is SNAPSHOT Version
        if: env.IS_SNAPSHOT == 'true'
        id: snapshot_vars
        run: |
          echo "jpackageAppName=Komet-SNAPSHOT-TESTOS-${{github.ref_name}}" >> $GITHUB_OUTPUT
          echo "jpackageAppVersion=1.1.${{github.run_number}}" >> $GITHUB_OUTPUT

   installer-test:
        strategy:
          matrix:
            os: [macos-14, ubuntu-20.04, windows-2022]
        needs: initialize
        name: Test
        runs-on: ${{matrix.os}}
        steps:
          - name: Checkout Repository
            uses: actions/checkout@v4
      
          - name: Setup Java
            uses: actions/setup-java@v4
            with:
              distribution: 'zulu'
              java-version: '21'
    
          - name: Build Installers
            run: |
                 mvn clean install ${{env.MAVEN_INSTALLER_ARGS}} -D"jpackage.app.name"=${{needs.initialize.outputs.JPACKAGEAPPNAME}} -D"jpackage.app.dest"=target/dist/snapshot-installer -D"jpackage.app.version"=${{needs.initialize.outputs.JPACKAGEAPPVERSION}} -B -e -D"org.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener"=warn -D"maven.build.cache.enabled"=false -DskipTests -DskipITs
        
          - name: Upload Installer
            uses: actions/upload-artifact@v4
            with:
             name: Installers-${{matrix.os}}
             path: application/target/dist/snapshot-installer/*