name: Installer Workflow

run-name: Installer Workflow Test


on:
  workflow_dispatch:
  push:

env:
    MAVEN_INSTALLER_ARGS: '-P create-installer'
    MAVEN_SETTINGS: '/home/ec2-user/maven/.m2/settings.xml'
    BRANCH_NAME: ${{github.ref_name}}


jobs:
   initialize:
      name: Initialize
      runs-on: ubuntu-20.04
      outputs:
        IS_SNAPSHOT: ${{ contains(steps.get_current_version.outputs.POM_VERSION, '-SNAPSHOT')}}
        POM_VERSION: ${{ steps.get_current_version.outputs.POM_VERSION }}
      steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
  
      # - name: Setup Java
      #   uses: actions/setup-java@v4
      #   with:
      #     distribution: 'zulu'
      #     java-version: '21'
        
      - name: Extract Version
        id: get_current_version
        run: |
            echo "POM_VERSION=$(./mvnw help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_OUTPUT
  
      - name: Print Maven POM project version
        run: |
          echo "version = ${{ steps.get_current_version.outputs.POM_VERSION }}"

      - name: Print Status
        run: |
          echo "IS_SNAPSHOT --  ${{ contains(steps.get_current_version.outputs.POM_VERSION, '-SNAPSHOT')}}"
          echo "BRANCH_NAME -- ${{env.BRANCH_NAME}}"

          

   installer-test:
        strategy:
          matrix:
            os: [macos-13, macos-14, ubuntu-20.04, windows-2022]
        needs: initialize
        name: Test
        runs-on: ${{matrix.os}}
        steps:
          - name: Checkout Repository
            uses: actions/checkout@v4
      
          - name: Setup Java
            uses: actions/setup-java@v4
            with:
              distribution: 'zulu'
              java-version: '21'

          - name: IS_SNAPSHOT & BRANCH IS NOT MAIN
            if: needs.initialize.outputs.IS_SNAPSHOT == 'true' && env.BRANCH_NAME != 'main'
            uses: actions/github-script@v7
            id: snapshot_installers_vars
            with:
              result-encoding: json
              script: |
                  var snapshotBranchName = '';
                  var NODE_NAME = "${{matrix.os}}".split('-')[0];
                  try {
                    snapshotBranchName = "${{env.BRANCH_NAME}}".split('/')[1].substring(0, Math.min("${{env.BRANCH_NAME}}".split('/')[1].length, 15))
                  } catch(ex) {
                    snapshotBranchName = "${{env.BRANCH_NAME}}".substring(0, Math.min("${{env.BRANCH_NAME}}".length, 15))
                  }

                  const jpackageAppName = `Komet-SNAPSHOT-${NODE_NAME}-${snapshotBranchName}`;
                  const jpackageAppVersion = "${{needs.initialize.outputs.POM_VERSION}}".split('.')[0] + "." + "${{needs.initialize.outputs.POM_VERSION}}".split('.')[1] + "." + "${{github.run_number}}"
                  const mvnInstallerArgs = `-P create-installer -D"jpackage.app.name"=${jpackageAppName} -D"jpackage.app.dest"=target/dist/snapshot-installer -D"jpackage.app.version"=${jpackageAppVersion}`


                  return {jpackageAppName, jpackageAppVersion, mvnInstallerArgs};
  
          - name: Build Installers
            run: |
                 mvn clean install ${{fromJson(steps.snapshot_installers_vars.outputs.result).mvnInstallerArgs || env.MAVEN_INSTALLER_ARGS}} -B -e -D"org.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener"=warn -D"maven.build.cache.enabled"=false -DskipTests -DskipITs
        
          - name: Upload Installer (MacOS)
            uses: actions/upload-artifact@v4
            if: contains(matrix.os, 'macos')
            with:
             name: ${{fromJson(steps.snapshot_installers_vars.outputs.result).jpackageAppName}}-${{fromJson(steps.snapshot_installers_vars.outputs.result).jpackageAppVersion}}.pkg
             path: application/target/dist/snapshot-installer/${{fromJson(steps.snapshot_installers_vars.outputs.result).jpackageAppName}}-${{fromJson(steps.snapshot_installers_vars.outputs.result).jpackageAppVersion}}.pkg

          - name: Upload Installer (Windows)
            uses: actions/upload-artifact@v4
            if: contains(matrix.os, 'windows')
            with:
              name: ${{fromJson(steps.snapshot_installers_vars.outputs.result).jpackageAppName}}-${{fromJson(steps.snapshot_installers_vars.outputs.result).jpackageAppVersion}}.msi
              path: application/target/dist/snapshot-installer/${{fromJson(steps.snapshot_installers_vars.outputs.result).jpackageAppName}}-${{fromJson(steps.snapshot_installers_vars.outputs.result).jpackageAppVersion}}.msi

          - name: Upload Installer (Linux)
            uses: actions/upload-artifact@v4
            if: contains(matrix.os, 'ubuntu')
            with:
              name: ${{fromJson(steps.snapshot_installers_vars.outputs.result).jpackageAppName}}-${{fromJson(steps.snapshot_installers_vars.outputs.result).jpackageAppVersion}}.rpm
              path: application/target/dist/snapshot-installer/${{fromJson(steps.snapshot_installers_vars.outputs.result).jpackageAppName}}-${{fromJson(steps.snapshot_installers_vars.outputs.result).jpackageAppVersion}}.rpm